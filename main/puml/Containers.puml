@startuml
set separator none
title Payment Platform - Containers

top to bottom direction

!include <C4/C4>
!include <C4/C4_Context>
!include <C4/C4_Container>

System(PaymentApplication, "Payment Application", $descr="Application integrates Payments Platform for payments processing", $tags="", $link="")
System(PaymentNetwork, "Payment Network", $descr="", $tags="", $link="")

System_Boundary("PaymentPlatform_boundary", "Payment Platform", $tags="") {
  ContainerDb(PaymentPlatform.Cache, "Cache", $techn="", $descr="Cache Layer for Payment", $tags="", $link="")
  Container(PaymentPlatform.RoutingAPI, "Routing API", $techn="", $descr="Routing Payment", $tags="", $link="")
  Container(PaymentPlatform.AntiMoneyLaundry, "Anti Money Laundry", $techn="", $descr="AML for Payment", $tags="", $link="")
  Container(PaymentPlatform.FraudDetection, "Fraud Detection", $techn="", $descr="Fraud Detection for Payment", $tags="", $link="")
  Container(PaymentPlatform.SSO, "SSO", $techn="", $descr="Single Sign On", $tags="", $link="")
  Container(PaymentPlatform.AIService, "AI Service", $techn="", $descr="AI Service for Fraud Detection", $tags="", $link="")
  ContainerDb(PaymentPlatform.LedgerDB, "Ledger DB", $techn="", $descr="Ledger Database", $tags="", $link="")
  Container(PaymentPlatform.PaymentsAPI, "Payments API", $techn="", $descr="Provide payments capabilities for consumers", $tags="", $link="")
  Container(PaymentPlatform.ValidationAPI, "Validation API", $techn="", $descr="Validate Payment", $tags="", $link="")
  Container(PaymentPlatform.ClearingAPI, "Clearing API", $techn="", $descr="Clearing Payment", $tags="", $link="")
  Container(PaymentPlatform.SettlementAPI, "Settlement API", $techn="", $descr="Settlement Payment", $tags="", $link="")
  Container(PaymentPlatform.PaymentEventsStream, "Payment Events Stream", $techn="", $descr="Event Stream for Payment", $tags="", $link="")
}

Rel(PaymentPlatform.PaymentsAPI, PaymentPlatform.SSO, "Authenticate and authorize request", $techn="", $tags="", $link="")
Rel(PaymentPlatform.PaymentsAPI, PaymentPlatform.PaymentEventsStream, "Listen on Payment Events", $techn="", $tags="", $link="")
Rel(PaymentPlatform.RoutingAPI, PaymentPlatform.PaymentEventsStream, "Listen on Payment Events", $techn="", $tags="", $link="")
Rel(PaymentPlatform.AntiMoneyLaundry, PaymentPlatform.PaymentEventsStream, "Listen on Payment Events", $techn="", $tags="", $link="")
Rel(PaymentPlatform.FraudDetection, PaymentPlatform.PaymentEventsStream, "Listen on Payment Events", $techn="", $tags="", $link="")
Rel(PaymentPlatform.ClearingAPI, PaymentPlatform.PaymentEventsStream, "Listen on Payment Events", $techn="", $tags="", $link="")
Rel(PaymentPlatform.SettlementAPI, PaymentPlatform.PaymentEventsStream, "Listen on Settlement Events", $techn="", $tags="", $link="")
Rel(PaymentPlatform.ValidationAPI, PaymentPlatform.PaymentEventsStream, "Listen on Payment Events", $techn="", $tags="", $link="")
Rel(PaymentPlatform.AntiMoneyLaundry, PaymentPlatform.Cache, "Cache", $techn="", $tags="", $link="")
Rel(PaymentPlatform.FraudDetection, PaymentPlatform.Cache, "Cache", $techn="", $tags="", $link="")
Rel(PaymentPlatform.FraudDetection, PaymentPlatform.AIService, "Score transaction", $techn="", $tags="", $link="")
Rel(PaymentPlatform.SettlementAPI, PaymentPlatform.LedgerDB, "Read transactions", $techn="", $tags="", $link="")
Rel(PaymentPlatform.RoutingAPI, PaymentPlatform.LedgerDB, "Save transactions", $techn="", $tags="", $link="")
Rel(PaymentApplication, PaymentPlatform.PaymentsAPI, "Process payment", $techn="", $tags="", $link="")
Rel(PaymentPlatform.RoutingAPI, PaymentNetwork, "Send transaction", $techn="", $tags="", $link="")
Rel(PaymentPlatform.SettlementAPI, PaymentNetwork, "Send batch transactions", $techn="", $tags="", $link="")

SHOW_LEGEND(true)
@enduml