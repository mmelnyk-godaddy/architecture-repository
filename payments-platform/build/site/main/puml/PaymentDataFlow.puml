@startuml
set separator none
title Payment Data Flow

top to bottom direction

!include <C4/C4>
!include <C4/C4_Context>
!include <C4/C4_Container>

System_Boundary("PaymentPlatform_boundary", "Payment Platform", $tags="") {
  ContainerDb(PaymentPlatform.Cache, "Cache", $techn="", $descr="Cache Layer for Payment", $tags="", $link="")
  Container(PaymentPlatform.RoutingAPI, "Routing API", $techn="", $descr="Routing Payment", $tags="", $link="")
  Container(PaymentPlatform.AntiMoneyLaundry, "Anti Money Laundry", $techn="", $descr="AML for Payment", $tags="", $link="")
  Container(PaymentPlatform.FraudDetection, "Fraud Detection", $techn="", $descr="Fraud Detection for Payment", $tags="", $link="")
  Container(PaymentPlatform.AIService, "AI Service", $techn="", $descr="AI Service for Fraud Detection", $tags="", $link="")
  ContainerDb(PaymentPlatform.LedgerDB, "Ledger DB", $techn="", $descr="Ledger Database", $tags="", $link="")
  Container(PaymentPlatform.PaymentsAPI, "Payments API", $techn="", $descr="Provide payments capabilities for consumers", $tags="", $link="")
  Container(PaymentPlatform.ValidationAPI, "Validation API", $techn="", $descr="Validate Payment", $tags="", $link="")
  Container(PaymentPlatform.ClearingAPI, "Clearing API", $techn="", $descr="Clearing Payment", $tags="", $link="")
  Container(PaymentPlatform.SettlementAPI, "Settlement API", $techn="", $descr="Settlement Payment", $tags="", $link="")
  Container(PaymentPlatform.PaymentEventsStream, "Payment Events Stream", $techn="", $descr="Event Stream for Payment", $tags="", $link="")
}

Person(User, "User", $descr="", $tags="", $link="")
System(PaymentApplication, "Payment Application", $descr="Application integrates Payments Platform for payments processing", $tags="", $link="")
System(PaymentNetwork, "Payment Network", $descr="", $tags="", $link="")

Rel(User, PaymentApplication, "1. Uses", $techn="", $tags="", $link="")
Rel(PaymentApplication, PaymentPlatform.PaymentsAPI, "2. Process payment", $techn="", $tags="", $link="")
Rel(PaymentPlatform.PaymentsAPI, PaymentPlatform.PaymentEventsStream, "3. New Payment", $techn="", $tags="", $link="")
Rel(PaymentPlatform.PaymentEventsStream, PaymentPlatform.ValidationAPI, "4. Validation Topic", $techn="", $tags="", $link="")
Rel(PaymentPlatform.ValidationAPI, PaymentPlatform.PaymentEventsStream, "5. Compliance Topic", $techn="", $tags="", $link="")
Rel(PaymentPlatform.PaymentEventsStream, PaymentPlatform.RoutingAPI, "6. Routing Topic", $techn="", $tags="", $link="")
Rel(PaymentPlatform.PaymentEventsStream, PaymentPlatform.AntiMoneyLaundry, "7. Compliance Topic", $techn="", $tags="", $link="")
Rel(PaymentPlatform.PaymentEventsStream, PaymentPlatform.FraudDetection, "8. Compliance Topic", $techn="", $tags="", $link="")
Rel(PaymentPlatform.FraudDetection, PaymentPlatform.PaymentEventsStream, "9. Clearing Topic", $techn="", $tags="", $link="")
Rel(PaymentPlatform.AntiMoneyLaundry, PaymentPlatform.PaymentEventsStream, "10. Clearing Topic", $techn="", $tags="", $link="")
Rel(PaymentPlatform.FraudDetection, PaymentPlatform.AIService, "11. Score payment", $techn="", $tags="", $link="")
Rel(PaymentPlatform.PaymentEventsStream, PaymentPlatform.ClearingAPI, "12. Clearing Topic", $techn="", $tags="", $link="")
Rel(PaymentPlatform.AntiMoneyLaundry, PaymentPlatform.Cache, "13. Cache", $techn="", $tags="", $link="")
Rel(PaymentPlatform.FraudDetection, PaymentPlatform.Cache, "14. Cache", $techn="", $tags="", $link="")
Rel(PaymentPlatform.RoutingAPI, PaymentPlatform.LedgerDB, "15. Save to Ledger", $techn="", $tags="", $link="")
Rel(PaymentPlatform.PaymentEventsStream, PaymentPlatform.SettlementAPI, "16. Settlement Topic", $techn="", $tags="", $link="")
Rel(PaymentPlatform.SettlementAPI, PaymentPlatform.LedgerDB, "17. Read transactions", $techn="", $tags="", $link="")
Rel(PaymentPlatform.SettlementAPI, PaymentNetwork, "18. Send to network", $techn="", $tags="", $link="")

SHOW_LEGEND(true)
@enduml