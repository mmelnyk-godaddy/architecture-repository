@startuml
set separator none
title Real Time Payment Data Flow

top to bottom direction

!include <C4/C4>
!include <C4/C4_Context>
!include <C4/C4_Container>

System_Boundary("PaymentGateway_boundary", "Payment Gateway", $tags="") {
  Container(PaymentGateway.PaymentEventsStream, "Payment Events Stream", $techn="", $descr="Event Stream for Payment", $tags="", $link="")
  ContainerDb(PaymentGateway.Cache, "Cache", $techn="", $descr="Cache Layer for Payment", $tags="", $link="")
  Container(PaymentGateway.RoutingAPI, "Routing API", $techn="", $descr="Routing Payment", $tags="", $link="")
  Container(PaymentGateway.AntiMoneyLaundry, "Anti Money Laundry", $techn="", $descr="AML for Payment", $tags="", $link="")
  Container(PaymentGateway.FraudDetection, "Fraud Detection", $techn="", $descr="Fraud Detection for Payment", $tags="", $link="")
  Container(PaymentGateway.AIService, "AI Service", $techn="", $descr="AI Service for Fraud Detection", $tags="", $link="")
  ContainerDb(PaymentGateway.LedgerDB, "Ledger DB", $techn="", $descr="Ledger Database", $tags="", $link="")
  Container(PaymentGateway.PaymentsAPI, "Payments API", $techn="", $descr="Provide payments capabilities for consumers", $tags="", $link="")
  Container(PaymentGateway.ValidationAPI, "Validation API", $techn="", $descr="Validate Payment", $tags="", $link="")
  Container(PaymentGateway.ClearingAPI, "Clearing API", $techn="", $descr="Clearing Payment", $tags="", $link="")
}

Person(User, "User", $descr="", $tags="", $link="")
System(PaymentApplication, "Payment Application", $descr="Application integrates Payments Platform for payments processing", $tags="", $link="")
System(PaymentNetwork, "Payment Network", $descr="", $tags="", $link="")

Rel(User, PaymentApplication, "1. Uses", $techn="", $tags="", $link="")
Rel(PaymentApplication, PaymentGateway.PaymentsAPI, "2. Process payment", $techn="", $tags="", $link="")
Rel(PaymentGateway.PaymentsAPI, PaymentGateway.PaymentEventsStream, "3. New Payment", $techn="", $tags="", $link="")
Rel(PaymentGateway.PaymentEventsStream, PaymentGateway.ValidationAPI, "4. Validation Topic", $techn="", $tags="", $link="")
Rel(PaymentGateway.ValidationAPI, PaymentGateway.PaymentEventsStream, "5. Compliance Topic", $techn="", $tags="", $link="")
Rel(PaymentGateway.PaymentEventsStream, PaymentGateway.RoutingAPI, "6. Routing Topic", $techn="", $tags="", $link="")
Rel(PaymentGateway.PaymentEventsStream, PaymentGateway.AntiMoneyLaundry, "7. Compliance Topic", $techn="", $tags="", $link="")
Rel(PaymentGateway.PaymentEventsStream, PaymentGateway.FraudDetection, "8. Compliance Topic", $techn="", $tags="", $link="")
Rel(PaymentGateway.FraudDetection, PaymentGateway.PaymentEventsStream, "9. Clearing Topic", $techn="", $tags="", $link="")
Rel(PaymentGateway.AntiMoneyLaundry, PaymentGateway.PaymentEventsStream, "10. Clearing Topic", $techn="", $tags="", $link="")
Rel(PaymentGateway.ClearingAPI, PaymentGateway.PaymentEventsStream, "11. Routing Topic", $techn="", $tags="", $link="")
Rel(PaymentGateway.PaymentEventsStream, PaymentGateway.ClearingAPI, "12. Clearing Topic", $techn="", $tags="", $link="")
Rel(PaymentGateway.AntiMoneyLaundry, PaymentGateway.Cache, "13. Cache", $techn="", $tags="", $link="")
Rel(PaymentGateway.FraudDetection, PaymentGateway.Cache, "14. Cache", $techn="", $tags="", $link="")
Rel(PaymentGateway.RoutingAPI, PaymentNetwork, "15. Send to network", $techn="", $tags="", $link="")
Rel(PaymentGateway.FraudDetection, PaymentGateway.AIService, "16. Score payment", $techn="", $tags="", $link="")
Rel(PaymentGateway.RoutingAPI, PaymentGateway.LedgerDB, "17. Save to Ledger", $techn="", $tags="", $link="")

SHOW_LEGEND(true)
@enduml